链式前向星的本质其实就是用数组模拟链表的邻接表。算法竞赛中存图最常见的两种方法应该是vector<Edge> G[]与链式前向星，
其实区别也就是每个顶点的出边是用数组存储还是用链表存储。我们对比一下这两种方法：vector<Edge> G[]：
优点：
1.写起来比链式前向星快（大概
2.每个顶点的出边都是用vector存储的，方便执行一些STL中的函数（比如排序）
缺点
1.STL会略慢一些2.浪费空间，由于vector申请空间的方式是两倍扩容，遇到卡空间的题目的时候会跪
3.数组可以random access的优点在图问题中通常没有什么卵用，但是数组不能O(1)删除元素的缺点在某些应用场合下非常致命然后
把上面的取个反大概也就是链式前向星的特点了...所以在没有删边操作的情况下，以写的爽的角度来看的话应该是vector<Edge> G[]
这种方式更爽一点，遇到需求删边操作或者对时间空间要求比较高的问题用链式前向星比较稳妥。

实际上vector好像可以和末尾元素swap后pop_back()来删掉特定的元素